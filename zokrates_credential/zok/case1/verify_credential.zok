import "hashes/sha256/512bitPacked" as sha256packed;
import "signatures/verifyEddsa.zok" as verifyEddsa;

def main(private field context_hash, private field id_hash, private field credential_type_hash, private field issuer_hash, private field credential_subject_hash, private field alumni_of_hash, private field age, private field exp) {
    // 첫 번째 4개 입력에 대한 해시 계산
    field[2] first_hash = sha256packed([context_hash, id_hash, credential_type_hash, issuer_hash]);
    
    // 두 번째 4개 입력에 대한 해시 계산
    field[2] second_hash = sha256packed([credential_subject_hash, alumni_of_hash, age, exp]);
    
    // 첫 번째 및 두 번째 해시 결과를 다시 해시하여 최종 해시를 계산
    field[2] final_hash = sha256packed([first_hash[0], first_hash[1], second_hash[0], second_hash[1]]);
    
    assert(final_hash[0] == 259303088619688775495249978242284171727);
    assert(final_hash[1] == 78484989799889442233947580579914975696);

    // 나이가 20살 이상인지 검사
    assert(age >= 20);

    BabyJubJubParams context = BabyJubJubParams();
    bool signature_valid = verifyEddsa(R, S, A, [final_hash[0], final_hash[1]], context);
    assert(signature_valid == true);

    return;
}